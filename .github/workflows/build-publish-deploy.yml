# Workflow name displayed in GitHub Actions UI
name: Build, Publish Component & Deploy Storybook

# Controls when the workflow will run
on:
  # Triggers the workflow on push events to the 'main' branch
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Define a set of jobs to be executed
jobs:
  # Job to build and publish the component library
  build-and-publish-component:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      contents: write # <--- CHANGED: semantic-release needs write access to create tags and push changes
      packages: write
      issues: write # <--- ADDED: For semantic-release to create GitHub releases
      pull-requests: write # <--- ADDED: For semantic-release to create GitHub releases

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # <--- ADDED: Fetch all history for semantic-release to analyze commits
          fetch-depth: 0

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify your desired Node.js version
          # We'll configure the registry for semantic-release later, or it picks up from .npmrc
          # registry-url: 'https://npm.pkg.github.com' # semantic-release handles this
          # scope: '@${{ github.repository_owner }}' # semantic-release handles this

      # Step 3: Install project dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Build the component library
      # This step must run BEFORE semantic-release to ensure the 'dist' folder is ready
      - name: Build component library
        run: npm run build:component

      # Step 5: Configure Git for semantic-release
      # This is crucial for semantic-release to commit and push tags
      - name: Configure Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Step 6: Run semantic-release to automate versioning and publishing
      - name: Release and Publish to GitHub Packages
        env:
          # GITHUB_TOKEN is used by semantic-release for Git operations (tags, releases)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN is used by semantic-release for npm publishing
          # For GitHub Packages, this should be the GITHUB_TOKEN itself
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # <--- ADDED: Set the GitHub Packages registry URL for semantic-release
          NPM_CONFIG_REGISTRY: 'https://npm.pkg.github.com/'
        run: npx semantic-release

  # Job to build Storybook and deploy it to GitHub Pages
  deploy-storybook:
    # This job depends on the 'build-and-publish-component' job completing successfully
    needs: build-and-publish-component
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify your desired Node.js version

      # Step 3: Install project dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Build Storybook
      # Assumes you have a script named 'build-storybook' in your package.json
      - name: Build Storybook
        run: npm run build-storybook

      # Step 5: Deploy Storybook to GitHub Pages
      # Uses the peaceiris/actions-gh-pages action for deployment
      - name: Deploy Storybook to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./storybook-static
          publish_branch: gh-pages
          keep_files: false
          commit_message: "Deploy Storybook to GitHub Pages"
