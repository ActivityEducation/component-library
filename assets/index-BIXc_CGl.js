import{j as t}from"./iframe-DGiRyBXK.js";import{c as s}from"./emotion-styled-base.browser.esm-DOJJeMjc.js";const o=s("div",{target:"eih82cn1"})("width:100%;height:",e=>e.theme.spacing.sm,";background-color:",e=>e.theme.colors.neutral[90],";border-radius:",e=>e.theme.borderRadius.full,";overflow:hidden;position:relative;"),l=s("div",{target:"eih82cn0"})("height:100%;width:",e=>e.progressWidth,"%;background-color:",e=>e.theme.colors.primary[40],";border-radius:",e=>e.theme.borderRadius.full,";transition:width 0.3s ease-in-out;"),d=({value:e=0,max:r=100,...n})=>{const a=Math.max(0,Math.min(e,r)),i=r===0?0:a/r*100;return t.jsx(o,{role:"progressbar","aria-valuenow":a,"aria-valuemin":0,"aria-valuemax":r,...n,children:t.jsx(l,{progressWidth:i})})};d.__docgenInfo={description:'A linear **ProgressBar** component for the AscendUCore Design System.\nIt visually indicates the progress of an operation or a value within a defined range.\nThis component is designed to be accessible via ARIA attributes, providing a clear\nand intuitive representation of completion status.\n\n```typescript\nimport { ProgressBar } from "@activityeducation/component-library";\n```\n\n## Justification\nProgress bars are essential UI elements for providing feedback to users about the\nstatus of ongoing processes, such as file uploads, data loading, or form completion.\nA standardized `ProgressBar` ensures a consistent visual language for progress\nindication across the application. It helps manage user expectations by showing\nthat an action is underway and approximately how much longer it might take,\nreducing frustration and improving the overall user experience. Its accessibility\nfeatures ensure that all users, including those relying on assistive technologies,\ncan understand the progress status.\n\n## Acceptance Criteria\n- **GIVEN** the `ProgressBar` component is rendered, **THEN** it should display\na track and a fill segment indicating the current progress.\n- **GIVEN** `value` and `max` props are provided, **THEN** the fill segment\'s\nwidth should accurately represent the ratio of `value` to `max`.\n- **WHEN** the `value` prop changes, **THEN** the fill segment should\ntransition smoothly to its new width.\n- **GIVEN** the component, **THEN** it should include appropriate ARIA attributes\n(`role="progressbar"`, `aria-valuenow`, `aria-valuemin`, `aria-valuemax`) for accessibility.\n- **GIVEN** `value` is 0, **THEN** the fill segment should not be visible.\n- **GIVEN** `value` is equal to `max`, **THEN** the fill segment should span\nthe entire width of the track.\n\n## Example & Props',methods:[],displayName:"ProgressBar",props:{value:{required:!1,tsType:{name:"number"},description:`The current value of the progress bar.
@default 0`,defaultValue:{value:"0",computed:!1}},max:{required:!1,tsType:{name:"number"},description:`The maximum value of the progress bar.
@default 100`,defaultValue:{value:"100",computed:!1}},css:{required:!1,tsType:{name:"SerializedStyles"},description:"Optional Emotion `css` prop for additional custom styles."}}};export{d as P};
