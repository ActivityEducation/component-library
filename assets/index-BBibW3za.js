import{j as o}from"./iframe-DGiRyBXK.js";import{c as t}from"./emotion-styled-base.browser.esm-DOJJeMjc.js";import{c as i}from"./emotion-react.browser.esm-CRTluIfQ.js";const r=t("div",{target:"eaax52q1"})("display:flex;gap:",e=>e.theme.spacing.sm,";padding:",e=>e.theme.spacing.xs," ",e=>e.theme.spacing.md,";background:",e=>e.theme.colors.background.toolbar,";min-height:64px;align-items:center;flex-direction:row;",e=>e.justifyContent&&i("justify-content:",e.justifyContent,";",""),";"),s=({justifyContent:e="flex-start",children:n,...a})=>o.jsx(r,{justifyContent:e,...a,children:n}),p=t("div",{target:"eaax52q0"})("display:flex;align-items:center;gap:",e=>e.theme.spacing.xs,";padding:0 ",e=>e.theme.spacing.sm,";border-right:1px solid ",e=>e.theme.colors.border.default,";&:last-of-type{border-right:none;}");s.__docgenInfo={description:'The **Toolbar** component provides a flexible container for grouping actions, controls,\nor navigation items. It is designed to arrange its children horizontally and is\nideal for use in headers, footers, or action bars within an application.\n\n```typescript\nimport { Toolbar } from "@activityeducation/component-library";\n```\n\n## Justification\nA standardized `Toolbar` component is essential for maintaining a consistent and\nintuitive user interface across different parts of an application. It ensures that\nrelated actions are visually grouped and easily accessible, improving user efficiency\nand reducing cognitive load. By encapsulating layout and styling concerns, it allows\ndevelopers to focus on the functionality of the actions themselves, accelerating\ndevelopment and simplifying maintenance. Its flexibility in content arrangement\n(e.g., `justifyContent` options) makes it adaptable to various UI patterns, from\nsimple button groups to complex navigation headers.\n\n## Acceptance Criteria\n- **GIVEN** the `Toolbar` component is rendered, **THEN** its children should be\narranged horizontally.\n- **GIVEN** `justifyContent` prop is set, **THEN** the items within the toolbar\nshould align horizontally according to the specified value (`flex-start`, `flex-end`, `center`, etc.).\n- **GIVEN** multiple `Button` components are placed directly inside the `Toolbar`,\n**THEN** they should have a default spacing between them.\n- **GIVEN** `ToolbarGroup` components are used within the `Toolbar`, **THEN** they\nshould visually separate groups of actions (e.g., with a border).\n- **GIVEN** the `Toolbar` contains mixed content (e.g., text and buttons), **THEN**\nall content should be vertically aligned in the center.\n\n## Example & Props',methods:[],displayName:"Toolbar",props:{justifyContent:{required:!1,tsType:{name:"union",raw:"'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly'",elements:[{name:"literal",value:"'flex-start'"},{name:"literal",value:"'flex-end'"},{name:"literal",value:"'center'"},{name:"literal",value:"'space-between'"},{name:"literal",value:"'space-around'"},{name:"literal",value:"'space-evenly'"}]},description:"Defines the horizontal alignment of toolbar items.\nUses CSS `justify-content` property.\n@default 'flex-start'",defaultValue:{value:"'flex-start'",computed:!1}},css:{required:!1,tsType:{name:"SerializedStyles"},description:"Optional Emotion `css` prop for additional custom styles for the outer container."},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"The content to be rendered inside the toolbar, typically `Button` or `ToolbarGroup` components."}}};export{s as T,p as a};
